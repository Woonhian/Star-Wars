{"version":3,"sources":["components/Home.js","components/People.js","components/AllPeopleCard.js","components/AllPeople.js","components/Navbar.js","App.js","index.js"],"names":["Home","className","to","People","id","useParams","useState","people","setPeople","isLoading","setIsLoading","useEffect","a","Axios","results","data","fetchPeople","role","name","gender","birth_year","height","mass","eye_color","hair_color","skin_color","AllPeopleCard","number","AllPeople","page","setPage","map","i","key","peopleId","url","split","filter","pop","type","onClick","e","preventDefault","loadPrevious","disabled","loadNext","count","Navbar","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e9dd7ff.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Star Wars</h1>\r\n      <h2>\r\n        Click{\" \"}\r\n        <span>\r\n          <Link to=\"/people\">People</Link>\r\n        </span>{\" \"}\r\n        to view a list of people\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst People = () => {\r\n  // Access match.params of the current route\r\n  const { id } = useParams();\r\n\r\n  const [people, setPeople] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchPeople = async () => {\r\n      setIsLoading(true);\r\n      const results = await Axios(`https://swapi.dev/api/people/${id}`);\r\n      setPeople(results.data);\r\n      setIsLoading(false);\r\n    };\r\n    fetchPeople();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <div className=\"text-center\">\r\n          <div className=\"spinner-border text-dark\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"text-center mb-4\">{people.name}</h2>\r\n      <div className=\"text-center\">\r\n        <h5 className=\"text-capitalize text-monospace\">\r\n          Gender: {people.gender}\r\n        </h5>\r\n        <h5 className=\"text-capitalize text-monospace\">\r\n          Birth Year: {people.birth_year}\r\n        </h5>\r\n        <h5 className=\"text-capitalize text-monospace\">\r\n          Height: {people.height}\r\n        </h5>\r\n        <h5 className=\"text-capitalize text-monospace\">Mass: {people.mass}</h5>\r\n        <h5 className=\"text-capitalize text-monospace\">\r\n          Eye Color: {people.eye_color}\r\n        </h5>\r\n        <h5 className=\"text-capitalize text-monospace\">\r\n          Hair Color: {people.hair_color}\r\n        </h5>\r\n        <h5 className=\"text-capitalize text-monospace\">\r\n          Skin Color: {people.skin_color}\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AllPeopleCard = ({ data, number }) => {\r\n  return (\r\n    <div className=\"col-2 mr-3 mb-5 border border-dark rounded text-center p-3\">\r\n      <Link to={`/people/${number}`}>\r\n        <div>{data.name}</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllPeopleCard;\r\n","import Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport AllPeopleCard from \"./AllPeopleCard\";\r\n\r\nconst AllPeople = () => {\r\n  const [people, setPeople] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n\r\n  // Fetch AllPeople\r\n  useEffect(() => {\r\n    const fetchPeople = async () => {\r\n      setIsLoading(true);\r\n      const results = await Axios(`https://swapi.dev/api/people/?page=${page}`);\r\n      setPeople(results.data);\r\n      setIsLoading(false);\r\n    };\r\n    fetchPeople();\r\n  }, [page]);\r\n\r\n  // Get the peopleID\r\n  const getId = (peopleId) =>\r\n    peopleId\r\n      .split(\"/\")\r\n      .filter((i) => i)\r\n      .pop();\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <div className=\"text-center\">\r\n          <div className=\"spinner-border text-dark\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const loadPrevious = (e) => {\r\n    e.preventDefault();\r\n    setPage(page - 1);\r\n  };\r\n\r\n  const loadNext = (e) => {\r\n    e.preventDefault();\r\n    setPage(page + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"text-center mb-4\">List of People</h2>\r\n      <div className=\"row d-flex justify-content-center\">\r\n        {people.results?.map((i, key) => {\r\n          return <AllPeopleCard data={i} number={getId(i.url)} key={key} />;\r\n        })}\r\n      </div>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm mr-2\"\r\n          onClick={(e) => loadPrevious(e)}\r\n          disabled={page <= 1}\r\n        >\r\n          Previous\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm ml-2\"\r\n          onClick={(e) => loadNext(e)}\r\n          disabled={page >= people.count / 10}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllPeople;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/people\" className=\"nav-link\">\r\n              People\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport People from \"./components/People\";\r\nimport AllPeople from \"./components/AllPeople\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/people\">\r\n          <AllPeople />\r\n        </Route>\r\n        <Route path=\"/people/:id\">\r\n          <People />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}